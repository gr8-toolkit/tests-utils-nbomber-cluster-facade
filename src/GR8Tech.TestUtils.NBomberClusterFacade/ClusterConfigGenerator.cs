using GR8Tech.TestUtils.NBomberClusterFacade.CommonSettings;
using Newtonsoft.Json;

namespace GR8Tech.TestUtils.NBomberClusterFacade;

public static class ClusterConfigGenerator
{
    public static async Task<string> GenerateCoordinatorConfig(
        string clusterId,
        int minAgentsCount,
        string natsUrl,
        string[] coordinatorScenarios,
        Agent[] agents)
    {
        var json = JsonConvert.SerializeObject(new CoordinatorClusterConfig
        {
            ClusterSettings = new CoordinatorClusterSettings
            {
                Coordinator = new CoordinatorData
                {
                    ClusterId = clusterId,
                    MinAgentsCount = minAgentsCount,
                    NATSServerURL = natsUrl,
                    TargetScenarios = coordinatorScenarios,
                    Agents = agents
                }
            } 
        });

        var fileName = "cluster_autogenerated.json";
        await File.WriteAllTextAsync(fileName, json);

        return fileName;
    }

    public static async Task<string> GenerateAgentConfig(
        string clusterId,
        string natsUrl,
        string agentGroup)
    {
        var json = JsonConvert.SerializeObject(new AgentClusterConfig
        {
            ClusterSettings = new AgentClusterSettings
            {
                Agent = new AgentData
                {
                    ClusterId = clusterId,
                    AgentGroup = agentGroup,
                    NATSServerURL = natsUrl,
                    StopAgentOnSessionFinished = true
                }
            }
        });

        var fileName = "agent_autogenerated.json";
        await File.WriteAllTextAsync("agent_autogenerated.json", json);

        return fileName;
    }

    private class CoordinatorClusterConfig
    {
        public CoordinatorClusterSettings ClusterSettings { get; set; }
    }

    private class AgentClusterConfig
    {
        public AgentClusterSettings ClusterSettings { get; set; }
    }

    private class CoordinatorClusterSettings
    {
        public CoordinatorData Coordinator { get; set; }
    }

    private class CoordinatorData
    {
        public string ClusterId { get; set; }
        public int MinAgentsCount { get; set; }
        public string NATSServerURL { get; set; }
        public string[] TargetScenarios { get; set; }
        public Agent[] Agents { get; set; }
    }

    private class AgentClusterSettings
    {
        public AgentData Agent { get; set; }
    }

    private class AgentData
    {
        public string ClusterId { get; set; }
        public string AgentGroup { get; set; }
        public string NATSServerURL { get; set; }
        public bool StopAgentOnSessionFinished { get; set; }
    }
}